    Checking embed-search v0.1.0 (C:\code\embed)
error: expected a pattern, found an expression
   --> src\storage\simple_vectordb.rs:126:13
    |
126 |         let expected_dim.unwrap_or(768) = Config::embedding_dimensions();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a pattern
    |
    = note: arbitrary expressions are not allowed in patterns: <https://doc.rust-lang.org/book/ch19-00-patterns.html>

error: expected a pattern, found an expression
   --> src\storage\simple_vectordb.rs:160:13
    |
160 |         let expected_dim.unwrap_or(768) = Config::embedding_dimensions();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a pattern
    |
    = note: arbitrary expressions are not allowed in patterns: <https://doc.rust-lang.org/book/ch19-00-patterns.html>

error: expected a pattern, found an expression
   --> src\storage\simple_vectordb.rs:246:13
    |
246 |         let expected_dim.unwrap_or(768) = Config::embedding_dimensions();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a pattern
    |
    = note: arbitrary expressions are not allowed in patterns: <https://doc.rust-lang.org/book/ch19-00-patterns.html>

error[E0425]: cannot find value `expected_dim` in this scope
   --> src\storage\simple_vectordb.rs:127:31
    |
127 |         if embedding.len() != expected_dim.unwrap_or(768).unwrap_or(768) {
    |                               ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `expected_dim` in this scope
   --> src\storage\simple_vectordb.rs:129:69
    |
129 |                 format!("Embedding must be {}-dimensional, got {}", expected_dim.unwrap_or(768), embedding.len())
    |                                                                     ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `expected_dim` in this scope
   --> src\storage\simple_vectordb.rs:162:35
    |
162 |             if embedding.len() != expected_dim.unwrap_or(768).unwrap_or(768) {
    |                                   ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `expected_dim` in this scope
   --> src\storage\simple_vectordb.rs:164:78
    |
164 |                     format!("All embeddings must be {}-dimensional, got {}", expected_dim.unwrap_or(768), embedding.len())
    |                                                                              ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `expected_dim` in this scope
   --> src\storage\simple_vectordb.rs:247:37
    |
247 |         if query_embedding.len() != expected_dim.unwrap_or(768) {
    |                                     ^^^^^^^^^^^^ not found in this scope

error[E0425]: cannot find value `expected_dim` in this scope
   --> src\storage\simple_vectordb.rs:249:75
    |
249 |                 format!("Query embedding must be {}-dimensional, got {}", expected_dim.unwrap_or(768), query_embedding.len())
    |                                                                           ^^^^^^^^^^^^ not found in this scope

warning: unused import: `std::sync::Arc`
 --> src\error.rs:7:5
  |
7 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `SafeUnwrap` and `StorageError`
 --> src\storage\safe_vectordb.rs:9:40
  |
9 | use crate::error::{EmbedError, Result, StorageError, SafeUnwrap};
  |                                        ^^^^^^^^^^^^  ^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src\storage\simple_vectordb.rs:4:5
  |
4 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `anyhow`
  --> src\storage\simple_vectordb.rs:10:22
   |
10 | use anyhow::{Result, anyhow};
   |                      ^^^^^^

warning: unused import: `anyhow`
 --> src\storage\lancedb_storage.rs:6:22
  |
6 | use anyhow::{Result, anyhow};
  |                      ^^^^^^

warning: unused import: `Table`
  --> src\storage\lancedb_storage.rs:16:27
   |
16 | use lancedb::{Connection, Table};
   |                           ^^^^^

warning: unused imports: `debug` and `warn`
  --> src\storage\lancedb_storage.rs:29:21
   |
29 | use tracing::{info, debug, warn};
   |                     ^^^^^  ^^^^

warning: unused import: `parking_lot::RwLock`
 --> src\storage\lancedb.rs:6:5
  |
6 | use parking_lot::RwLock;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `anyhow`
 --> src\storage\lancedb.rs:8:22
  |
8 | use anyhow::{Result, anyhow};
  |                      ^^^^^^

warning: unused imports: `Deserialize` and `Serialize`
  --> src\storage\lancedb.rs:10:13
   |
10 | use serde::{Deserialize, Serialize};
   |             ^^^^^^^^^^^  ^^^^^^^^^

warning: unused imports: `Array`, `FixedSizeListArray`, `Float32Array`, `Int32Array`, and `StringArray`
  --> src\storage\lancedb.rs:12:20
   |
12 | use arrow::array::{Array, StringArray, Int32Array, Float32Array, FixedSizeListArray};
   |                    ^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^

warning: unused imports: `DataType` and `Field`
  --> src\storage\lancedb.rs:14:24
   |
14 | use arrow::datatypes::{DataType, Field, Schema};
   |                        ^^^^^^^^  ^^^^^

warning: unused imports: `Connection` and `Table`
  --> src\storage\lancedb.rs:19:15
   |
19 | use lancedb::{Connection, Table};
   |               ^^^^^^^^^^  ^^^^^

warning: unused import: `IndexOp`
  --> src\embedding\nomic.rs:14:42
   |
14 | use candle_core::{Device, Tensor, DType, IndexOp};
   |                                          ^^^^^^^

warning: unused import: `std::sync::Arc`
 --> src\search\bm25.rs:2:5
  |
2 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `anyhow::Result`
 --> src\search\text_processor.rs:2:5
  |
2 | use anyhow::Result;
  |     ^^^^^^^^^^^^^^

warning: unused import: `Path`
 --> src\search\inverted_index.rs:2:17
  |
2 | use std::path::{Path, PathBuf};
  |                 ^^^^

warning: unused import: `ChunkContext`
 --> src\search\unified.rs:6:70
  |
6 | use crate::chunking::{SimpleRegexChunker, Chunk, ThreeChunkExpander, ChunkContext};
  |                                                                      ^^^^^^^^^^^^

warning: unused import: `FusedResult`
 --> src\search\symbol_enhanced_searcher.rs:8:21
  |
8 | use crate::search::{FusedResult, MatchType};
  |                     ^^^^^^^^^^^

error[E0425]: cannot find function `retry_database_operation` in this scope
   --> src\storage\lancedb_storage.rs:155:26
    |
155 |         let connection = retry_database_operation(
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0277]: `std::result::Result<usize, EmbedError>` doesn't implement `std::fmt::Display`
   --> src\storage\lancedb_storage.rs:182:15
    |
182 |               embedding_dim, compression_enabled);
    |               ^^^^^^^^^^^^^ `std::result::Result<usize, EmbedError>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `std::result::Result<usize, EmbedError>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__macro_support::format_args` which comes from the expansion of the macro `info` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0605]: non-primitive cast: `std::result::Result<usize, EmbedError>` as `i32`
   --> src\storage\lancedb_storage.rs:175:72
    |
175 |                 Arc::new(Field::new("item", DataType::Float32, true)), embedding_dim as i32
    |                                                                        ^^^^^^^^^^^^^^^^^^^^ an `as` expression can be used to convert enum types to numeric types only if the enum type is unit-only or field-less
    |
    = note: see https://doc.rust-lang.org/reference/items/enumerations.html#casting for more information

error[E0277]: can't compare `usize` with `std::result::Result<usize, EmbedError>`
   --> src\storage\lancedb_storage.rs:263:28
    |
263 |         if embedding.len() != expected_dim {
    |                            ^^ no implementation for `usize == std::result::Result<usize, EmbedError>`
    |
    = help: the trait `PartialEq<std::result::Result<usize, EmbedError>>` is not implemented for `usize`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              `usize` implements `PartialEq<serde_json::Value>`
              `usize` implements `PartialEq`

error[E0277]: `std::result::Result<usize, EmbedError>` doesn't implement `std::fmt::Display`
   --> src\storage\lancedb_storage.rs:265:69
    |
265 |                 format!("Embedding must be {}-dimensional, got {}", expected_dim, embedding.len())
    |                                                                     ^^^^^^^^^^^^ `std::result::Result<usize, EmbedError>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `std::result::Result<usize, EmbedError>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: can't compare `usize` with `std::result::Result<usize, EmbedError>`
   --> src\storage\lancedb_storage.rs:292:39
    |
292 |             if record.embedding.len() != expected_dim {
    |                                       ^^ no implementation for `usize == std::result::Result<usize, EmbedError>`
    |
    = help: the trait `PartialEq<std::result::Result<usize, EmbedError>>` is not implemented for `usize`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              `usize` implements `PartialEq<serde_json::Value>`
              `usize` implements `PartialEq`

error[E0277]: `std::result::Result<usize, EmbedError>` doesn't implement `std::fmt::Display`
   --> src\storage\lancedb_storage.rs:294:78
    |
294 |                     format!("All embeddings must be {}-dimensional, got {}", expected_dim, record.embedding.len())
    |                                                                              ^^^^^^^^^^^^ `std::result::Result<usize, EmbedError>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `std::result::Result<usize, EmbedError>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: cannot multiply `usize` by `std::result::Result<usize, EmbedError>`
   --> src\storage\lancedb_storage.rs:309:68
    |
309 |         let mut flat_embeddings = Vec::with_capacity(records.len() * embedding_dim);
    |                                                                    ^ no implementation for `usize * std::result::Result<usize, EmbedError>`
    |
    = help: the trait `std::ops::Mul<std::result::Result<usize, EmbedError>>` is not implemented for `usize`
    = help: the following other types implement trait `std::ops::Mul<Rhs>`:
              `&usize` implements `std::ops::Mul<&num_bigint::bigint::BigInt>`
              `&usize` implements `std::ops::Mul<&num_bigint::biguint::BigUint>`
              `&usize` implements `std::ops::Mul<&num_complex::Complex<usize>>`
              `&usize` implements `std::ops::Mul<num_bigint::bigint::BigInt>`
              `&usize` implements `std::ops::Mul<num_bigint::biguint::BigUint>`
              `&usize` implements `std::ops::Mul<num_complex::Complex<usize>>`
              `&usize` implements `std::ops::Mul<usize>`
              `&usize` implements `std::ops::Mul`
            and 9 others

error[E0425]: cannot find function `retry_database_operation` in this scope
   --> src\storage\lancedb_storage.rs:350:9
    |
350 |         retry_database_operation(
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `metrics`
   --> src\storage\lancedb_storage.rs:367:9
    |
367 |         metrics::metrics().record_embedding(duration, false);
    |         ^^^^^^^ use of unresolved module or unlinked crate `metrics`
    |
    = help: if you wanted to use a crate named `metrics`, use `cargo add metrics` to add it to your `Cargo.toml`

error[E0605]: non-primitive cast: `std::result::Result<usize, EmbedError>` as `i32`
   --> src\storage\lancedb_storage.rs:325:13
    |
325 |             embedding_dim as i32,
    |             ^^^^^^^^^^^^^^^^^^^^ an `as` expression can be used to convert enum types to numeric types only if the enum type is unit-only or field-less
    |
    = note: see https://doc.rust-lang.org/reference/items/enumerations.html#casting for more information

error[E0277]: can't compare `usize` with `std::result::Result<usize, EmbedError>`
   --> src\storage\lancedb_storage.rs:384:34
    |
384 |         if query_embedding.len() != expected_dim {
    |                                  ^^ no implementation for `usize == std::result::Result<usize, EmbedError>`
    |
    = help: the trait `PartialEq<std::result::Result<usize, EmbedError>>` is not implemented for `usize`
    = help: the following other types implement trait `PartialEq<Rhs>`:
              `usize` implements `PartialEq<serde_json::Value>`
              `usize` implements `PartialEq`

error[E0277]: `std::result::Result<usize, EmbedError>` doesn't implement `std::fmt::Display`
   --> src\storage\lancedb_storage.rs:386:75
    |
386 |                 format!("Query embedding must be {}-dimensional, got {}", expected_dim, query_embedding.len())
    |                                                                           ^^^^^^^^^^^^ `std::result::Result<usize, EmbedError>` cannot be formatted with the default formatter
    |
    = help: the trait `std::fmt::Display` is not implemented for `std::result::Result<usize, EmbedError>`
    = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead
    = note: this error originates in the macro `$crate::__export::format_args` which comes from the expansion of the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0425]: cannot find function `retry_database_operation` in this scope
   --> src\storage\lancedb_storage.rs:410:26
    |
410 |         let mut stream = retry_database_operation(
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope

error[E0308]: mismatched types
   --> src\storage\lancedb_storage.rs:457:47
    |
457 |                 let embedding: Vec<f32> = (0..Config::embedding_dimensions()).map(|j| embedding_values.value(j)).collect();
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected integer, found `Result<usize, EmbedError>`
    |
    = note: expected type `{integer}`
               found enum `std::result::Result<usize, EmbedError>`
help: use the `?` operator to extract the `std::result::Result<usize, EmbedError>` value, propagating a `Result::Err` value to the caller
    |
457 |                 let embedding: Vec<f32> = (0..Config::embedding_dimensions()?).map(|j| embedding_values.value(j)).collect();
    |                                                                             +

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `metrics`
   --> src\storage\lancedb_storage.rs:507:9
    |
507 |         metrics::metrics().record_search(duration, filtered_records.len(), true);
    |         ^^^^^^^ use of unresolved module or unlinked crate `metrics`
    |
    = help: if you wanted to use a crate named `metrics`, use `cargo add metrics` to add it to your `Cargo.toml`

error[E0599]: no method named `embed_text` found for struct `Arc<NomicEmbedder>` in the current scope
   --> src\search\unified.rs:282:45
    |
282 |         let query_embedding = self.embedder.embed_text(query)
    |                                             ^^^^^^^^^^
    |
help: there is a method `embed` with a similar name
    |
282 -         let query_embedding = self.embedder.embed_text(query)
282 +         let query_embedding = self.embedder.embed(query)
    |

warning: unused variable: `project_root`
  --> src\search\search_adapter.rs:57:85
   |
57 | ...config::SearchBackend, project_root: std::path::PathBuf) -> Result<Box<dyn TextSearcher>> {
   |                           ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_project_root`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `expired_keys`
   --> src\cache\bounded_cache.rs:193:17
    |
193 |         let mut expired_keys: Vec<K> = Vec::new();
    |                 ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_expired_keys`

warning: unused variable: `initial_size`
   --> src\cache\bounded_cache.rs:198:13
    |
198 |         let initial_size = cache.len();
    |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_initial_size`

warning: variable does not need to be mutable
   --> src\cache\bounded_cache.rs:193:13
    |
193 |         let mut expired_keys: Vec<K> = Vec::new();
    |             ----^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `shape`
  --> src\embedding\nomic.rs:79:13
   |
79 |         let shape = tensor.shape();
   |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_shape`

warning: unused variable: `attention_tensor`
   --> src\embedding\nomic.rs:791:13
    |
791 |         let attention_tensor = if attention_sum.to_scalar::<f32>()? == 0.0 {
    |             ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_attention_tensor`

warning: variable does not need to be mutable
   --> src\embedding\nomic.rs:799:13
    |
799 |         let mut hidden_states = self.token_embeddings.index_select(&input_tensor, 0)
    |             ----^^^^^^^^^^^^^
    |             |
    |             help: remove this `mut`

warning: unused variable: `seq_len`
   --> src\embedding\nomic.rs:903:14
    |
903 |         let (seq_len, hidden_size) = hidden_states.dims2()
    |              ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_seq_len`

warning: unused variable: `hidden_size`
   --> src\embedding\nomic.rs:903:23
    |
903 |         let (seq_len, hidden_size) = hidden_states.dims2()
    |                       ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_hidden_size`

warning: unused variable: `storage`
  --> src\lib.rs:67:9
   |
67 |     let storage = VectorStorage::new(StorageConfig::default())?;
   |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_storage`

Some errors have detailed explanations: E0277, E0308, E0425, E0433, E0599, E0605.
For more information about an error, try `rustc --explain E0277`.
warning: `embed-search` (lib) generated 29 warnings
error: could not compile `embed-search` (lib) due to 26 previous errors; 29 warnings emitted
